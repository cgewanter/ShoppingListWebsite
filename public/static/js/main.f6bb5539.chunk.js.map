{"version":3,"sources":["Page1.jsx","Page2.jsx","NewUser.jsx","AddList.jsx","ShowLists.jsx","Login.jsx","Nav.js","App.js","serviceWorker.js","index.js"],"names":["Page1","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","addItem","console","log","state","items","join","push","name","fetch","method","body","JSON","stringify","headers","Content-Type","setId","e","setState","listItemId","target","value","setFoodId","foodId","setListId","listId","setQuantity","quantity","setSize","size","react_default","a","createElement","Fragment","id","itemId","placeholder","onChange","foodid","setName","listid","setCateg","onClick","Component","Page2","getList","itemsArray","listItems","then","response","json","data","forEach","listItem","className","map","item","key","NewUser","setFirstname","firstname","setLastname","lastname","setUsername","username","setNewUser","AddList","addList","setListTitle","listTitle","categ","setUserId","userId","ShowLists","getLists","listsArray","lists","myLists","list","Login","un","mode","src_AddList","newUser","src_NewUser","Nav","react_router_dom","to","App","content","currentPage","src_Page1","src_Page2","src_Login","src_ShowLists","buttons","src_Nav","react_router","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f6bb5539.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass Page1 extends Component {\n  constructor(props) {\n\tsuper(props);\n\tthis.state = { listItemId: \"\", foodId: \"\",  listId: \"\", quantity: \"\", size: \"\", items: []};\n  }\n  \n  addItem = () => {\n\n\t  console.log(\"adding item\");\n\t\tconsole.log(this.state);\n\t\tconsole.log(this.state.items.join());\n\t\tthis.state.items.push(this.state.name);\n\t  fetch('http://localhost:8080/items', {\n\t\t  method: \"POST\",\n\t\t\tbody: JSON.stringify(this.state),\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t }\n\t\t});\n  }\n  \n  setId = (e) => {\n\t  console.log(e);\n\t  this.setState({ listItemId: e.target.value });\n  }\n  \n  setFoodId = (e) => {\n\t  console.log(e);\n\t  this.setState({ foodId: e.target.value });\n\t}\n\t\n\tsetListId = (e) => {\n\t\tconsole.log(e);\n\t\tthis.setState({ listId: e.target.value});\n\t}\n\n\tsetQuantity = (e) => {\n\t\tconsole.log(e);\n\t\tthis.setState({ quantity: e.target.value});\n\t}\n\n\tsetSize = (e) => {\n\t\tconsole.log(e);\n\t\tthis.setState({ size: e.target.value});\n\t}\n  \n  render() {\n\t  return (\n\t  <React.Fragment>\n\t\t\t<p>Add an Item:</p>\n\t  <input id=\"itemId\" value={this.state.itemId} placeholder =\"Item ID\" onChange={this.setId}/>\n\t  <input id=\"foodId\" value={this.state.foodid} placeholder=\"Food ID\" onChange={this.setName}/>\n\t\t<input id=\"listId\" value={this.state.listid} placeholder = \"List ID\" onChange={this.setCateg}/>\n\t\t<input id=\"quantity\" value={this.state.quantity} placeholder =\"Qty\" onChange={this.setId}/>\n\t\t<input id=\"size\" value={this.state.size} placeholder =\"Size\" onChange={this.setId}/>\n\t\t<button onClick={this.addItem}>Add Item</button>\n\t  </React.Fragment>\n\t\t);\n\t\n  }\n}\n\nexport default Page1;\n","import React, { Component } from 'react';\nimport './App.css';\n\nclass Page2 extends Component {\n  constructor(props) {\n\tsuper(props);\n\tthis.state = { listItems:[]}\n  };\n  \n  getList= (itemsArray) => {\n\t this.setState({listItems: itemsArray});\n }\n\t\n  componentDidMount() {\n\t  console.log(\"This is page 2.\");\n\t  const getList = this.getList;\n\t  fetch('http://localhost:8080/items')\n\t  .then(\n\t\tfunction(response) {\n\t\t  response.json().then(function(data) {\n\t\t\t\tgetList(data);\n\t\t\t\tdata.forEach(listItem => console.log(listItem));\n\t\t  });\n\t\t}\n\t  );\n  } \n  \n  render() {\n\t  console.log(\"rending\", this.state);\n    return (\n      <div className=\"App\">\n\t\t\t<p>\n\t\t\t\tPage 2: My Shopping Lists\n\t\t\t</p>\n\n\t  \t{\t\t\t\n\t\t\tthis.state.items.map(item =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t (<li key = {item.itemId}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</li>))\n\t\t  }\n      </div>\n    );\n  }\n}\n\nexport default Page2;\n","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\n\r\n\r\nclass NewUser extends Component {\r\n  constructor(props) {\r\n\tsuper(props);\r\n\tthis.state = {firstname:\"\", lastname:\"\", username:\"\"};\r\n  }\r\n\r\n\r\n  setFirstname = (e)=>{\r\n    this.setState({ firstname: e.target.value});\r\n  }\r\n\r\n  setLastname = (e)=>{\r\n    this.setState({ lastname: e.target.value});\r\n  }\r\n\r\n  setUsername = (e)=>{\r\n    this.setState({ username: e.target.value});\r\n  }\r\n\r\n  setNewUser = ()=>{\r\n    console.log(\"adding user\");\r\n    console.log(this.state);\r\n  fetch('http://localhost:8080/newuser', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(this.state),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n         }\r\n    });\r\n  }\r\n\r\n \r\n  \r\n  render() {\r\n    return (\r\n    <React.Fragment>\r\n          <p>Please enter the following information:</p>\r\n          <input id=\"firstname\" value = {this.state.firstname}  placeholder =\"firstname\"\r\n                 onChange={this.setFirstname}/>\r\n          <input id =\"lastname\" value = {this.state.lastname}  placeholder=\"lastname\"\r\n                onChange={this.setLastname}/>\r\n          <input id =\"username\" value = {this.state.username} placeholder =\"username\"\r\n                onChange={this.setUsername}/>\r\n          <button onClick={this.setNewUser}>Enter</button>\r\n    </React.Fragment>\r\n      );\r\n    }\r\n}\r\nexport default NewUser;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nclass AddList extends Component {\r\n  constructor(props) {\r\n\tsuper(props);\r\n\tthis.state = { listId: \"\", listTitle: \"\",  categ: \"\", userId:\"\"};\r\n  }\r\n  \r\n  addList = () => {\r\n\r\n\t  console.log(\"adding list\");\r\n\t  console.log(this.state);\r\n\t\t\r\n\t  fetch('http://localhost:8080/addlist', {\r\n\t\t    method: \"POST\",\r\n            body: JSON.stringify(this.state),\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t }\r\n\t\t});\r\n  }\r\n  \r\n  \r\n  setListTitle = (e) => {\r\n\t  console.log(e);\r\n\t  this.setState({ listTitle: e.target.value });\r\n\t}\r\n\t\r\n\tsetCateg = (e) => {\r\n\t\tconsole.log(e);\r\n\t\tthis.setState({ categ: e.target.value});\r\n\t}\r\n\r\n\tsetUserId = (e) => {\r\n\t\tconsole.log(e);\r\n\t\tthis.setState({ userId: e.target.value});\r\n\t}\r\n\r\n  \r\n  render() {\r\n\t  return (\r\n\t  <React.Fragment>\r\n\t\t<p>Add a List:</p>\r\n\r\n\t    <input id=\"listTitle\" value={this.state.listTitle} placeholder=\"List Title\" onChange={this.setListTitle}/>\r\n\t\t<input id=\"listCateg\" value={this.state.categ} placeholder = \"Category\" onChange={this.setCateg}/>\r\n        <input id=\"userId\" value={this.state.userId} placeholder = \"User Id\" onChange={this.setUserId}/>\r\n        <button onClick={this.addList}>Add List</button>\r\n\t  </React.Fragment>\r\n    \t);\r\n  }\r\n}\r\n\r\nexport default AddList;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\n\r\n\r\nclass ShowLists extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { lists: [] }\r\n  };\r\n\r\n  getLists = (listsArray) => {\r\n    this.setState({ lists: listsArray });\r\n  }\r\n\r\n\r\n  myLists = () => {\r\n    return (\r\n      <React.Fragment>\r\n        {this.state.lists.map(list =>\r\n          (<li key={list.listId}>\r\n            {list.listTitle}\r\n          </li>))\r\n        }\r\n        );\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"This is show lists\");\r\n    const getLists = this.getLists;\r\n    fetch('http://localhost:8080/showlists')\r\n      .then(\r\n        function (response) {\r\n          response.json().then(function (data) {\r\n            getLists(data);\r\n            data.forEach(list => console.log(list));\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"ShowLists\">\r\n          <p>My Shopping Lists</p>\r\n          \r\n          {this.state.lists.map(list =>\r\n            (<li key={list.listId}>\r\n              {list.listTitle}\r\n            </li>))\r\n          }\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShowLists;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport NewUser from './NewUser';\r\nimport Page1 from './Page1';\r\nimport Page2 from './Page2';\r\nimport AddList from './AddList';\r\nimport ShowLists from './ShowLists';\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n\tsuper(props);\r\n\tthis.state = {username: \"\", newUser: false}\r\n  }\r\n  \r\n  \r\n  setUsername =(un)=> {\r\n    console.log(\"setting username\");\r\n    console.log(un);\r\n    this.setState({username: un.target.value});\r\n    console.log(\"username\", this.state);\r\n    fetch('http://localhost:8080/login', {\r\n      method: \"POST\",\r\n      mode: \"no-cors\",\r\n\t\t\tbody: this.state.username,\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t      }\r\n        }\r\n        );\r\n      if (this.state.username != \"\"){\r\n        console.log(\"in if\");\r\n        //this.setState({currentPage: 5})\r\n        console.log(\"current state:\");\r\n        console.log(this.state);\r\n        return(<AddList/>);\r\n      }\r\n      else return (<div> Error! </div>)\r\n    }\r\n  setNewUser=()=>{\r\n      console.log(\"setting new user to true\");\r\n      this.setState({newUser: true});\r\n\r\n  }\r\n\r\n  newUser = () => {\r\n      if (this.state.newUser===true){\r\n        return(<NewUser/>);\r\n        } \r\n  }\r\n\r\n  /* nextPage = () => {\r\n    switch(this.state.currentPage){\r\n\t\t\tcase 1:\r\n\t\t\treturn <Page1/>\r\n\t\t\tcase 2:\r\n\t\t\treturn <Page2/>\r\n\t\t\tcase 3:\r\n\t\t\treturn <Login/>\r\n\t\t\tcase 4:\r\n\t\t\treturn <AddList/>\r\n\t\t\tcase 5:\r\n\t\t\treturn <ShowLists/>\r\n\t\t\tdefault:\r\n\t\t\treturn <Login/>\r\n\t\t}\r\n  } */\r\n\r\n\r\n  render() {\r\n\t  return (\r\n         \r\n\t  <React.Fragment>\r\n\t\t\t<p>Please login with your username:</p>\r\n\t\t\t<input id=\"username\" value={this.state.username} placeholder =\"Username\" onChange={this.setUsername}></input>\r\n            <button onClick={this.setUsername}>Login</button>\r\n            <div/>\r\n            <button onClick={this.setNewUser}>New user?</button>\r\n        {this.newUser()}\r\n        \r\n        \r\n\t  </React.Fragment>\r\n\t\t);\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n\r\nfunction Nav() {\r\n\r\n    return (\r\n        <nav>\r\n            <h3>My Shopping Site</h3>\r\n            <ul className=\"nav-links\">\r\n                <Link to= \"/login\">\r\n                    <li>Login</li>\r\n                </Link>\r\n                <Link to =\"/addlist\">\r\n                    <li>New List</li>\r\n                </Link>\r\n\r\n                <Link to =\"/showlists\">\r\n                    <li>Show My Lists</li>\r\n                </Link>\r\n\r\n\r\n            </ul>\r\n        </nav>\r\n\r\n    )\r\n\r\n\r\n}\r\nexport default Nav;","import React, { Component } from 'react';\nimport './App.css';\nimport Page1 from './Page1';\nimport Page2 from './Page2';\nimport Login from './Login';\nimport AddList from './AddList';\nimport ShowLists from './ShowLists';\nimport Nav from './Nav';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { currentPage: 3 };\n\t}\n\n\n\tcontent = () => {\n\t\tswitch (this.state.currentPage) {\n\t\t\tcase 1:\n\t\t\t\treturn <Page1 />\n\t\t\tcase 2:\n\t\t\t\treturn <Page2 />\n\t\t\tcase 3:\n\t\t\t\treturn <Login />\n\t\t\tcase 4:\n\t\t\t\treturn <AddList />\n\t\t\tcase 5:\n\t\t\t\treturn <ShowLists />\n\t\t\tdefault:\n\t\t\t\treturn <Login />\n\t\t}\n\t}\n\n\tbuttons = () => {\n\t\treturn (\n\t\t\t<React.Fragment>\n\n\t\t\t\t<p>Menu:</p>\n\t\t\t\t<button onClick={() => { this.setState({ currentPage: 3 }) }}>Login</button>\n\t\t\t\t<button onClick={() => { this.setState({ currentPage: 4 }) }}>Add a list</button>\n\t\t\t\t<button onClick={() => { this.setState({ currentPage: 1 }) }}>Add an item</button>\n\t\t\t\t<button onClick={() => { this.setState({ currentPage: 2 }) }}>See my items</button>\n\t\t\t\t<button onClick={() => { this.setState({ currentPage: 5 }) }}>See my lists</button>\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n\n\trender() {\n\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t<div className = \"App\">\n\t\t\t\t\t<Nav />\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path=\"/login\" component={Login} />\n\t\t\t\t\t\t<Route path=\"/addlist\" component={AddList} />\n\t\t\t\t\t\t<Route path=\"/showlists\" component={ShowLists} />\n\n\n\t\t\t\t\t</Switch>\n\t\t\t\t</div>\n\t\t\t</Router>\n\n\n\t\t\t/* \t<React.Fragment>\n\t\t\t\t\t{this.buttons()}\n\t\t\t\t\t{this.content()}\t\t\n\t\t\n\t\t\t</React.Fragment> */\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}